<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/US2Condition.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/US2Condition</TokenIdentifier>
			<Abstract type="html">A condition is the smallest sub element of the validation framework.
It tells how a string must be structured or wat is has to contain or not.
Validators (see US2Validator are storing those conditions and checking
for violations of every condition.
Conditions are recommended working with regular expressions but can also contain
their custom checking code for detecting violations in the string to check.</Abstract>
			<DeclaredIn>US2Condition.h</DeclaredIn>
            
			
			<NodeRef refid="1"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/US2Condition/setShouldAllowViolation:</TokenIdentifier>
			<Abstract type="html">If set to NO the user is not able to enter characters which would break the condition.
The default is YES.</Abstract>
			<DeclaredIn>US2Condition.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL shouldAllowViolation</Declaration>
			
			
			<Anchor>//api/name/shouldAllowViolation</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/US2Condition/shouldAllowViolation</TokenIdentifier>
			<Abstract type="html">If set to NO the user is not able to enter characters which would break the condition.
The default is YES.</Abstract>
			<DeclaredIn>US2Condition.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL shouldAllowViolation</Declaration>
			
			
			<Anchor>//api/name/shouldAllowViolation</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/US2Condition/shouldAllowViolation</TokenIdentifier>
			<Abstract type="html">If set to NO the user is not able to enter characters which would break the condition.
The default is YES.</Abstract>
			<DeclaredIn>US2Condition.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL shouldAllowViolation</Declaration>
			
			
			<Anchor>//api/name/shouldAllowViolation</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/US2Condition/setLocalizedViolationString:</TokenIdentifier>
			<Abstract type="html">Returns a localized string which describes the kind of violation.</Abstract>
			<DeclaredIn>US2Condition.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *localizedViolationString</Declaration>
			
			<ReturnValue><Abstract type="html">Localized violation string</Abstract></ReturnValue>
			<Anchor>//api/name/localizedViolationString</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/US2Condition/localizedViolationString</TokenIdentifier>
			<Abstract type="html">Returns a localized string which describes the kind of violation.</Abstract>
			<DeclaredIn>US2Condition.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *localizedViolationString</Declaration>
			
			<ReturnValue><Abstract type="html">Localized violation string</Abstract></ReturnValue>
			<Anchor>//api/name/localizedViolationString</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/US2Condition/localizedViolationString</TokenIdentifier>
			<Abstract type="html">Returns a localized string which describes the kind of violation.</Abstract>
			<DeclaredIn>US2Condition.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *localizedViolationString</Declaration>
			
			<ReturnValue><Abstract type="html">Localized violation string</Abstract></ReturnValue>
			<Anchor>//api/name/localizedViolationString</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/US2Condition/setRegexString:</TokenIdentifier>
			<Abstract type="html">A regular expression string which the validated string is matched against
Defaults to nil</Abstract>
			<DeclaredIn>US2Condition.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *regexString</Declaration>
			
			
			<Anchor>//api/name/regexString</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/US2Condition/regexString</TokenIdentifier>
			<Abstract type="html">A regular expression string which the validated string is matched against
Defaults to nil</Abstract>
			<DeclaredIn>US2Condition.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *regexString</Declaration>
			
			
			<Anchor>//api/name/regexString</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/US2Condition/regexString</TokenIdentifier>
			<Abstract type="html">A regular expression string which the validated string is matched against
Defaults to nil</Abstract>
			<DeclaredIn>US2Condition.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSString *regexString</Declaration>
			
			
			<Anchor>//api/name/regexString</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/US2Condition/condition</TokenIdentifier>
			<Abstract type="html">Static shorthand for creating a condition.</Abstract>
			<DeclaredIn>US2Condition.h</DeclaredIn>
			
			<Declaration>+ (instancetype)condition</Declaration>
			
			
			<Anchor>//api/name/condition</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/US2Condition/initWithLocalizedViolationString:</TokenIdentifier>
			<Abstract type="html">Initialize condition with a custom localized violation string.</Abstract>
			<DeclaredIn>US2Condition.h</DeclaredIn>
			
			<Declaration>- (id)initWithLocalizedViolationString:(NSString *)localizedViolationString</Declaration>
			
			
			<Anchor>//api/name/initWithLocalizedViolationString:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/US2Condition/initWithRegexString:</TokenIdentifier>
			<Abstract type="html">Initialize condition with a custom regex string.</Abstract>
			<DeclaredIn>US2Condition.h</DeclaredIn>
			
			<Declaration>- (id)initWithRegexString:(NSString *)regexString</Declaration>
			
			
			<Anchor>//api/name/initWithRegexString:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/US2Condition/initWithLocalizedViolationString:andRegexString:</TokenIdentifier>
			<Abstract type="html">Initialize condition with a custom localized violation string and regex string.</Abstract>
			<DeclaredIn>US2Condition.h</DeclaredIn>
			
			<Declaration>- (id)initWithLocalizedViolationString:(NSString *)localizedViolationString andRegexString:(NSString *)regexString</Declaration>
			
			
			<Anchor>//api/name/initWithLocalizedViolationString:andRegexString:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
        
	</File>
</Tokens>